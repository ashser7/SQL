# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#1. I determined what artists were in the following keys:1,4,8.
SELECT artist_name FROM Spotifydata
WHERE key IN (1,4,8);

#2. I determined what artists have the letter "a" in the second position.
SELECT artist_name FROM Spotifydata
WHERE artist_name LIKE '_a%';

#3. I determined what song was the least popular song.
SELECT artist_name,track_name,MIN(popularity) AS min_popularity
FROM Spotifydata;

#4. I determined the loudness, key, and energy by each artist and their song and ordered the data by each song's energy. 
SELECT artist_name,track_name, loudness, key, energy
FROM Spotifydata
ORDER BY energy DESC;
